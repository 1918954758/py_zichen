Python3字典
    字典是另一种可变容器模型，可存储任意类型对象。
    字典的每个键值key=>value对冒号 : 分割，每个对之间用逗号(,)分割，整个字典包括在花括号{}中，格式如下所示：
        d = {key1:value1, key2:value2, key3:value3}
                                        key1    ---------->     value1
        字典(dictionary)                key2    ---------->     value2
                                        key3    ---------->     value3
        键必须是唯一的，值则不必。
        值可以取任意数据类型，但键必须是不可变的，如字符串、数字。
        一个简单的字典实例：
            dict = {'name':'runoob', 'likes':123, 'url':'www.runoob.con'}
        也可以使用如下方式创建字典：
            dict1 = {'abc': 456}
            dict2 = {'abc': 123, 98.6: 37}
1. 访问字典里的值
    把相应的键放入到方括号中，如下实力：
        #!/usr/bin/python
        # -*- coding: UTF-8 -*-
        dict = {'Name': 'Runoob', 'Age': 21, 'Class': 'First'}
        print("dict['Name']：", dict['Name'])
        print("dict['Age']：", dict['Age'])
        output==>
                dict['Name']： Runoob
                dict['Age']： 21
2. 修改字典
    向字典添加新内容的方法是增加新的键/值对，修改或删除已有键/值对如下实例：
        #!/usr/bin/python
        # -*- coding: UTF-8 -*-
        dicts = {'Name': 'Runoob', 'Age': 21, 'Class': 'First'}
        if __name__ == '__main__':
            print("dicts：", dicts)
            dicts['Age'] = 8  # 更新Age
            dicts['School'] = "菜鸟教程"  # 添加信息
            print("dicts['Age']：", dicts['Age'])
            print("dicts['School']：", dicts['School'])
            print("dicts：", dicts)
            output==>
                    dicts： {'Name': 'Runoob', 'Age': 21, 'Class': 'First'}
                    dicts['Age']： 8
                    dicts['School']： 菜鸟教程
                    dicts： {'Name': 'Runoob', 'Age': 8, 'Class': 'First', 'School': '菜鸟教程'}
3. 删除字典元素
    能删除单一的元素也能清空字典，清空只需要一项操作。
    显示删除一个字典的del命令，如下实例：
        #!/usr/bin/python
        # -*- coding: UTF-8 -*-
        dict = {'Name': 'Runoob', 'Age': 21, 'Class': 'First'}
        if __name__ == '__main__':
            print('dict：', dict)
            del dict['Name']  # 删除字典中Name元素
            print('dict：', dict)
            dict.clear()  # 清空字典
            print('dict：', dict)
            del dict  # 删除字典dict
            print("dict['Age']：", dict['Age'])
            print("dict['School']：", dict['School'])
        output==>
                dict： {'Name': 'Runoob', 'Age': 21, 'Class': 'First'}
                dict： {'Age': 21, 'Class': 'First'}
                dict： {}
                Traceback (most recent call last):
                  File "E:/py/py_zichen/python_base/PythonCode/python基本数据类型/删除字典元素.py", line 13, in <module>
                    print("dict['Age']：", dict['Age'])
                TypeError: 'type' object is not subscriptable
4. 字典键的特性
    字典值可以是任何的python对象，既可以是标准的对象，也可以是用户定义的，但键不行。
    两个重要的点需要记住：
        1) 不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住，如下实例：
        2) 键必须不可改变，所以可以用数字，字符串或元组来充当，而用列表就不行，如下实例：
            实例：
                #!/usr/bin/python
                # -*- coding: UTF-8 -*-
                dict = {['Name']: 'Runoob', 'Age': 21}
                print("dict['Name']：", dict['Name'])
                output==>
                Traceback (most recent call last):
                  File "E:/py/py_zichen/python_base/PythonCode/python基本数据类型/字典的键使用列表会报错.py", line 4, in <module>
                    dict = {['Name']: 'Runoob', 'Age': 21}
                TypeError: unhashable type: 'list'
5. 字典内置函数及方法
    内置函数：
        len(dict)           计算字典元素个数，即键的总数
        str(dict)           输出字典，以可打印的字符串表示
        type(variable)      返回输入的变量类型，如果变量是字典就返回字典类型
    内置方法：
        radiansdict.clear()                                 # 删除字典内所有元素
        radiansdict.copy()                                  # 返回一个字典的浅复制
        radiansdict.fromkeys()                              # 创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值
        radiansdict.get(key, default=None)                  # 返回指定键的值，如果键不在字典中返回default设置的默认值
        key in dict                                         # 如果键在字典dict里，返回True,否则返回False
        radiansdict.items()                                 # 以列表返回可遍历的(键，值)元组数组
        radiansdict.keys()                                  # 返回一个迭代器，可以使用list()来转换为列表
        radiansdict.setdefault(key, default=None)           # 和get()类似，但如果键不存在于字典中，将会添加键并将值设置为default
        radiansdict.update(dict2)                           # 把字典dict2的键/值对更新到dict里
        radiansdict.values()                                # 返回一个迭代器，可以使用list()来转换为列表
        pop(key, default)                                   # 删除字典给定键key所对应的值，返回值为被删除的值。key值必须给出。否则，返回default
        popitem()                                           # 随机返回并删除字典中的最后一对键和值
6. 课后练习
    x = True
    country_counter = {}

    def addone(country):
        if country in country_counter:
            country_counter[country] += 1
        else :
            country_counter[country] = 1
    addone('China')
    addone('Japan')
    addone('china')
    print(country_counter)
    print(len(country_counter))
    output==>
            {'China': 1, 'Japan': 1, 'china': 1}
            3