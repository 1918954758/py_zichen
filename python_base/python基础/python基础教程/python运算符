Python3运算符
    4 + 5 = 9
    例子中，4 和 5 被称为操作数， + 称为运算符。
    python语言支持一下类型的运算：
1. 算数运算符
    +(加) -(减) *(乘) /(取小数位) %(取余)  **(乘方) //(取整数位)
2. 比较运算符
    ==(等于)  !=(不等于)  >(大于)  <(小于)  >=(大于等于)  <=(小于等于)
3. 赋值运算符
    =  +=  -=  *=  /=  %=  **=  //=  :=(海象运算符，Python3.8新增)
4. 位运算符
    &   按位与，如果两个相应位都为1时，结果才是1，否则为0
    |   按位或，如果两个相应位有一个为1时，结果才是1，否则为0
    ^   按位异或，如果两个相应位不同时，结果才是1
    ~   按位取反，对数据的二进制位取反，即把1变为0，把0变为1
    <<  左移运算符，a * 2^(位移数)
    >>  右移运算符，a / 2^(位移数)
    例如：a = 60
    a << 2 = 60 * 2 ^ 2 = 240
    a >> 2 = 60 * 2 ^ 2 = 15
5. 逻辑运算符
    a = 10   b = 20
    and     x and y     布尔"与" -如果x为True，x and y返回y的值，否则它返回x的计算值      a and y 返回 20
    or      x or y      布尔"或" -如果x为True，x or y返回x的值，否则返回y的计算值          a or y 返回10
    not     not x       布尔"非" -如果x为True，not x返回False，如果x为False，它返回True   not(a and b) 返回False
    优先级   not > and > or
6. 成员运算符
    in          如果在指定的序列中找到值返回True，否则返回False
    not in      如果在指定的序列中没有找到值返回True，否则返回False
7. 身份运算符
    is          is判断两个标识符是不是引用自一个对象         x is y， 类似id(x) == id(y)，如果引用的是同一个对象则返回True，否则返回False
    is not      is not是判断两个标识符是不是引用自不同对象    x is not y，类似id(a) == id(y)，如果引用的不是同一个对象则返回True，否则返回False
    注：id()函数用于获取对象内存地址。
    is和==的区别：
        is 判断两个对象是否相等
        ==判断引用变量的值是否相等
8. 运算符优先级(从高到低)
    **
    ~ + -
    * / % //
    + -
    >> <<
    &
    ^ |
    <= < > >=
    == !=
    = %= /= //= -= += *= **=
    is is not
    in not in
    not and or
9. 注意
    python3已经不支持<>运算符，我们可以使用!=代替，如果我们一定要使用<>比较运算符，可以使用以下方式：
        >>> from __future__ import barry_as_FLUFL
        >>> 1 <> 2
        True